# Spring boot application
spring.application.name = microservice-provider
server.port = 9090
#datasource
spring.datasource.url=jdbc:mysql://114.116.83.151:3306/maomi?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Maomiyibian_2018
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize= 1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,slf4j
spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.useGlobalDataSourceStat=true

#mybatis
mybatis.mapper-locations=classpath*:com/maomiyibian/microservice/provider/mapper/**/*.xml
mybatis.configuration.cache-enabled=true

#redis
spring.redis.host=118.24.171.135
spring.redis.port=6999
spring.redis.password=directxjy921
spring.redis.timeout=1000ms
#spring.redis.lettuce.pool.max-active=10
#spring.redis.lettuce.pool.max-wait=3000ms
#spring.redis.lettuce.pool.max-idle=10
#spring.redis.lettuce.pool.min-idle=1

redis.maxIdle=300  
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000  
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000  
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000  
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024  
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000  
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true  
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true  


# DemoService service version
service.version = 1.0.0

# Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.service
dubbo.scan.basePackages  =com.maomiyibian.microservice.provider.impl
# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = microservice-provider
dubbo.application.name = microservice-provider
dubbo.application.qos.port=22222
dubbo.application.qos.enable=true

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20880
dubbo.protocol.status = server
dubbo.provider.timeout=6000

## RegistryConfig Bean
dubbo.registry.id = my-registry
dubbo.registry.address =118.24.171.135:2181,118.24.171.135:2182,118.24.171.135:2183
dubbo.registry.protocol=zookeeper
# Enables Dubbo All Endpoints
management.endpoint.dubbo.enabled = true
management.endpoint.dubbo-shutdown.enabled = true
management.endpoint.dubbo-configs.enabled = true
management.endpoint.dubbo-services.enabled = true
management.endpoint.dubbo-references.enabled = true
management.endpoint.dubbo-properties.enabled = true

# Dubbo Health
## StatusChecker Name defaults (default : "memory", "load" )
management.health.dubbo.status.defaults = memory
## StatusChecker Name extras (default : empty )
management.health.dubbo.status.extras = load,threadpool

#logging
logging.level.root=info
logging.level.com.maomiyibian.microservice=debug